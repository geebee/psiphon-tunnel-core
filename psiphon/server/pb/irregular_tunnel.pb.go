// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/irregular_tunnel.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IrregularTunnel struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	MetadataClient         *MetadataClient        `protobuf:"bytes,1,opt,name=metadata_client,json=metadataClient,proto3,oneof" json:"metadata_client,omitempty"`
	DuplicateClientIp      *string                `protobuf:"bytes,100,opt,name=duplicate_client_ip,json=duplicateClientIp,proto3,oneof" json:"duplicate_client_ip,omitempty"` //LowCardinality
	DuplicateElapsedTimeMs *int64                 `protobuf:"varint,101,opt,name=duplicate_elapsed_time_ms,json=duplicateElapsedTimeMs,proto3,oneof" json:"duplicate_elapsed_time_ms,omitempty"`
	DuplicateSeed          *string                `protobuf:"bytes,102,opt,name=duplicate_seed,json=duplicateSeed,proto3,oneof" json:"duplicate_seed,omitempty"`
	DuplicateSeedType      *string                `protobuf:"bytes,103,opt,name=duplicate_seed_type,json=duplicateSeedType,proto3,oneof" json:"duplicate_seed_type,omitempty"` //LowCardinality
	ListenerPortNumber     *uint32                `protobuf:"varint,104,opt,name=listener_port_number,json=listenerPortNumber,proto3,oneof" json:"listener_port_number,omitempty"`
	ListenerProtocol       *string                `protobuf:"bytes,105,opt,name=listener_protocol,json=listenerProtocol,proto3,oneof" json:"listener_protocol,omitempty"` //LowCardinality
	TunnelError            *string                `protobuf:"bytes,106,opt,name=tunnel_error,json=tunnelError,proto3,oneof" json:"tunnel_error,omitempty"`                //LowCardinality
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *IrregularTunnel) Reset() {
	*x = IrregularTunnel{}
	mi := &file_proto_irregular_tunnel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IrregularTunnel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IrregularTunnel) ProtoMessage() {}

func (x *IrregularTunnel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_irregular_tunnel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IrregularTunnel.ProtoReflect.Descriptor instead.
func (*IrregularTunnel) Descriptor() ([]byte, []int) {
	return file_proto_irregular_tunnel_proto_rawDescGZIP(), []int{0}
}

func (x *IrregularTunnel) GetMetadataClient() *MetadataClient {
	if x != nil {
		return x.MetadataClient
	}
	return nil
}

func (x *IrregularTunnel) GetDuplicateClientIp() string {
	if x != nil && x.DuplicateClientIp != nil {
		return *x.DuplicateClientIp
	}
	return ""
}

func (x *IrregularTunnel) GetDuplicateElapsedTimeMs() int64 {
	if x != nil && x.DuplicateElapsedTimeMs != nil {
		return *x.DuplicateElapsedTimeMs
	}
	return 0
}

func (x *IrregularTunnel) GetDuplicateSeed() string {
	if x != nil && x.DuplicateSeed != nil {
		return *x.DuplicateSeed
	}
	return ""
}

func (x *IrregularTunnel) GetDuplicateSeedType() string {
	if x != nil && x.DuplicateSeedType != nil {
		return *x.DuplicateSeedType
	}
	return ""
}

func (x *IrregularTunnel) GetListenerPortNumber() uint32 {
	if x != nil && x.ListenerPortNumber != nil {
		return *x.ListenerPortNumber
	}
	return 0
}

func (x *IrregularTunnel) GetListenerProtocol() string {
	if x != nil && x.ListenerProtocol != nil {
		return *x.ListenerProtocol
	}
	return ""
}

func (x *IrregularTunnel) GetTunnelError() string {
	if x != nil && x.TunnelError != nil {
		return *x.TunnelError
	}
	return ""
}

var File_proto_irregular_tunnel_proto protoreflect.FileDescriptor

const file_proto_irregular_tunnel_proto_rawDesc = "" +
	"\n" +
	"\x1cproto/irregular_tunnel.proto\x12\bpsiphond\x1a\x14proto/metadata.proto\"\xf5\x04\n" +
	"\x0fIrregularTunnel\x12F\n" +
	"\x0fmetadata_client\x18\x01 \x01(\v2\x18.psiphond.MetadataClientH\x00R\x0emetadataClient\x88\x01\x01\x123\n" +
	"\x13duplicate_client_ip\x18d \x01(\tH\x01R\x11duplicateClientIp\x88\x01\x01\x12>\n" +
	"\x19duplicate_elapsed_time_ms\x18e \x01(\x03H\x02R\x16duplicateElapsedTimeMs\x88\x01\x01\x12*\n" +
	"\x0eduplicate_seed\x18f \x01(\tH\x03R\rduplicateSeed\x88\x01\x01\x123\n" +
	"\x13duplicate_seed_type\x18g \x01(\tH\x04R\x11duplicateSeedType\x88\x01\x01\x125\n" +
	"\x14listener_port_number\x18h \x01(\rH\x05R\x12listenerPortNumber\x88\x01\x01\x120\n" +
	"\x11listener_protocol\x18i \x01(\tH\x06R\x10listenerProtocol\x88\x01\x01\x12&\n" +
	"\ftunnel_error\x18j \x01(\tH\aR\vtunnelError\x88\x01\x01B\x12\n" +
	"\x10_metadata_clientB\x16\n" +
	"\x14_duplicate_client_ipB\x1c\n" +
	"\x1a_duplicate_elapsed_time_msB\x11\n" +
	"\x0f_duplicate_seedB\x16\n" +
	"\x14_duplicate_seed_typeB\x17\n" +
	"\x15_listener_port_numberB\x14\n" +
	"\x12_listener_protocolB\x0f\n" +
	"\r_tunnel_errorB?Z=github.com/Psiphon-Labs/psiphon-tunnel-core/psiphon/server/pbb\x06proto3"

var (
	file_proto_irregular_tunnel_proto_rawDescOnce sync.Once
	file_proto_irregular_tunnel_proto_rawDescData []byte
)

func file_proto_irregular_tunnel_proto_rawDescGZIP() []byte {
	file_proto_irregular_tunnel_proto_rawDescOnce.Do(func() {
		file_proto_irregular_tunnel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_irregular_tunnel_proto_rawDesc), len(file_proto_irregular_tunnel_proto_rawDesc)))
	})
	return file_proto_irregular_tunnel_proto_rawDescData
}

var file_proto_irregular_tunnel_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_irregular_tunnel_proto_goTypes = []any{
	(*IrregularTunnel)(nil), // 0: psiphond.IrregularTunnel
	(*MetadataClient)(nil),  // 1: psiphond.MetadataClient
}
var file_proto_irregular_tunnel_proto_depIdxs = []int32{
	1, // 0: psiphond.IrregularTunnel.metadata_client:type_name -> psiphond.MetadataClient
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_irregular_tunnel_proto_init() }
func file_proto_irregular_tunnel_proto_init() {
	if File_proto_irregular_tunnel_proto != nil {
		return
	}
	file_proto_metadata_proto_init()
	file_proto_irregular_tunnel_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_irregular_tunnel_proto_rawDesc), len(file_proto_irregular_tunnel_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_irregular_tunnel_proto_goTypes,
		DependencyIndexes: file_proto_irregular_tunnel_proto_depIdxs,
		MessageInfos:      file_proto_irregular_tunnel_proto_msgTypes,
	}.Build()
	File_proto_irregular_tunnel_proto = out.File
	file_proto_irregular_tunnel_proto_goTypes = nil
	file_proto_irregular_tunnel_proto_depIdxs = nil
}
