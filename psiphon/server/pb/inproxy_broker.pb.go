// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/inproxy_broker.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InproxyBroker struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	MetadataClient                *MetadataClient        `protobuf:"bytes,1,opt,name=metadata_client,json=metadataClient,proto3,oneof" json:"metadata_client,omitempty"`
	MetadataDevice                *MetadataDevice        `protobuf:"bytes,2,opt,name=metadata_device,json=metadataDevice,proto3,oneof" json:"metadata_device,omitempty"`
	MetadataSession               *MetadataSession       `protobuf:"bytes,3,opt,name=metadata_session,json=metadataSession,proto3,oneof" json:"metadata_session,omitempty"`
	MetadataServerEntry           *MetadataServerEntry   `protobuf:"bytes,4,opt,name=metadata_server_entry,json=metadataServerEntry,proto3,oneof" json:"metadata_server_entry,omitempty"`
	MetadataMeek                  *MetadataMeek          `protobuf:"bytes,5,opt,name=metadata_meek,json=metadataMeek,proto3,oneof" json:"metadata_meek,omitempty"`
	AnnouncementMatchIndex        *int32                 `protobuf:"varint,100,opt,name=announcement_match_index,json=announcementMatchIndex,proto3,oneof" json:"announcement_match_index,omitempty"`
	AnnouncementQueueSize         *int32                 `protobuf:"varint,101,opt,name=announcement_queue_size,json=announcementQueueSize,proto3,oneof" json:"announcement_queue_size,omitempty"`
	AnswerError                   *string                `protobuf:"bytes,102,opt,name=answer_error,json=answerError,proto3,oneof" json:"answer_error,omitempty"`                     //LowCardinality
	AppliedTacticsTag             *string                `protobuf:"bytes,103,opt,name=applied_tactics_tag,json=appliedTacticsTag,proto3,oneof" json:"applied_tactics_tag,omitempty"` //LowCardinality
	BrokerEvent                   *string                `protobuf:"bytes,104,opt,name=broker_event,json=brokerEvent,proto3,oneof" json:"broker_event,omitempty"`                     //LowCardinality
	BrokerId                      *string                `protobuf:"bytes,105,opt,name=broker_id,json=brokerId,proto3,oneof" json:"broker_id,omitempty"`                              //LowCardinality
	ConnectedClients              *int64                 `protobuf:"varint,106,opt,name=connected_clients,json=connectedClients,proto3,oneof" json:"connected_clients,omitempty"`
	ConnectingClients             *int64                 `protobuf:"varint,107,opt,name=connecting_clients,json=connectingClients,proto3,oneof" json:"connecting_clients,omitempty"`
	ConnectionId                  *string                `protobuf:"bytes,108,opt,name=connection_id,json=connectionId,proto3,oneof" json:"connection_id,omitempty"`
	DestinationServerId           *string                `protobuf:"bytes,109,opt,name=destination_server_id,json=destinationServerId,proto3,oneof" json:"destination_server_id,omitempty"` //LowCardinality
	ElapsedTime                   *int64                 `protobuf:"varint,110,opt,name=elapsed_time,json=elapsedTime,proto3,oneof" json:"elapsed_time,omitempty"`
	Error                         *string                `protobuf:"bytes,111,opt,name=error,proto3,oneof" json:"error,omitempty"`                                                                //LowCardinality
	FilteredIceCandidates         *string                `protobuf:"bytes,112,opt,name=filtered_ice_candidates,json=filteredIceCandidates,proto3,oneof" json:"filtered_ice_candidates,omitempty"` //LowCardinality
	FrontingProviderId            *string                `protobuf:"bytes,113,opt,name=fronting_provider_id,json=frontingProviderId,proto3,oneof" json:"fronting_provider_id,omitempty"`          //LowCardinality
	Has_IPv6                      *bool                  `protobuf:"varint,114,opt,name=has_IPv6,json=hasIPv6,proto3,oneof" json:"has_IPv6,omitempty"`
	HasCommonCompartmentIds       *bool                  `protobuf:"varint,115,opt,name=has_common_compartment_ids,json=hasCommonCompartmentIds,proto3,oneof" json:"has_common_compartment_ids,omitempty"`
	HasPersonalCompartmentIds     *bool                  `protobuf:"varint,116,opt,name=has_personal_compartment_ids,json=hasPersonalCompartmentIds,proto3,oneof" json:"has_personal_compartment_ids,omitempty"`
	HasPrivate_IP                 *bool                  `protobuf:"varint,117,opt,name=has_private_IP,json=hasPrivateIP,proto3,oneof" json:"has_private_IP,omitempty"`
	IceCandidateTypes             *string                `protobuf:"bytes,118,opt,name=ice_candidate_types,json=iceCandidateTypes,proto3,oneof" json:"ice_candidate_types,omitempty"` //LowCardinality
	IsPriority                    *bool                  `protobuf:"varint,119,opt,name=is_priority,json=isPriority,proto3,oneof" json:"is_priority,omitempty"`
	LimitDownstreamBytesPerSecond *int64                 `protobuf:"varint,120,opt,name=limit_downstream_bytes_per_second,json=limitDownstreamBytesPerSecond,proto3,oneof" json:"limit_downstream_bytes_per_second,omitempty"`
	LimitUpstreamBytesPerSecond   *int64                 `protobuf:"varint,121,opt,name=limit_upstream_bytes_per_second,json=limitUpstreamBytesPerSecond,proto3,oneof" json:"limit_upstream_bytes_per_second,omitempty"`
	MaxClients                    *int64                 `protobuf:"varint,122,opt,name=max_clients,json=maxClients,proto3,oneof" json:"max_clients,omitempty"`
	MeekServerHttpVersion         *string                `protobuf:"bytes,123,opt,name=meek_server_http_version,json=meekServerHttpVersion,proto3,oneof" json:"meek_server_http_version,omitempty"` //LowCardinality
	NatType                       *string                `protobuf:"bytes,124,opt,name=nat_type,json=natType,proto3,oneof" json:"nat_type,omitempty"`                                               //LowCardinality
	NetworkType                   *string                `protobuf:"bytes,125,opt,name=network_type,json=networkType,proto3,oneof" json:"network_type,omitempty"`                                   //LowCardinality
	NewTacticsTag                 *string                `protobuf:"bytes,126,opt,name=new_tactics_tag,json=newTacticsTag,proto3,oneof" json:"new_tactics_tag,omitempty"`                           //LowCardinality
	OfferMatchIndex               *int64                 `protobuf:"varint,127,opt,name=offer_match_index,json=offerMatchIndex,proto3,oneof" json:"offer_match_index,omitempty"`
	OfferQueueSize                *int64                 `protobuf:"varint,128,opt,name=offer_queue_size,json=offerQueueSize,proto3,oneof" json:"offer_queue_size,omitempty"`
	PeakDownstreamBytesPerSecond  *int64                 `protobuf:"varint,129,opt,name=peak_downstream_bytes_per_second,json=peakDownstreamBytesPerSecond,proto3,oneof" json:"peak_downstream_bytes_per_second,omitempty"`
	PeakUpstreamBytesPerSecond    *int64                 `protobuf:"varint,130,opt,name=peak_upstream_bytes_per_second,json=peakUpstreamBytesPerSecond,proto3,oneof" json:"peak_upstream_bytes_per_second,omitempty"`
	PortMappingTypes              *string                `protobuf:"bytes,131,opt,name=port_mapping_types,json=portMappingTypes,proto3,oneof" json:"port_mapping_types,omitempty"` //LowCardinality
	PreferredNatMatch             *bool                  `protobuf:"varint,132,opt,name=preferred_nat_match,json=preferredNatMatch,proto3,oneof" json:"preferred_nat_match,omitempty"`
	ProtocolVersion               *int32                 `protobuf:"varint,133,opt,name=protocol_version,json=protocolVersion,proto3,oneof" json:"protocol_version,omitempty"`
	ProxyId                       *string                `protobuf:"bytes,134,opt,name=proxy_id,json=proxyId,proto3,oneof" json:"proxy_id,omitempty"`                                               //LowCardinality
	ProxyNatType                  *string                `protobuf:"bytes,135,opt,name=proxy_nat_type,json=proxyNatType,proto3,oneof" json:"proxy_nat_type,omitempty"`                              //LowCardinality
	ProxyPortMappingTypes         *string                `protobuf:"bytes,136,opt,name=proxy_port_mapping_types,json=proxyPortMappingTypes,proto3,oneof" json:"proxy_port_mapping_types,omitempty"` //LowCardinality
	ServerId                      *string                `protobuf:"bytes,137,opt,name=server_id,json=serverId,proto3,oneof" json:"server_id,omitempty"`                                            //LowCardinality
	StoredTacticsTag              *string                `protobuf:"bytes,138,opt,name=stored_tactics_tag,json=storedTacticsTag,proto3,oneof" json:"stored_tactics_tag,omitempty"`                  //LowCardinality
	TimedOut                      *bool                  `protobuf:"varint,139,opt,name=timed_out,json=timedOut,proto3,oneof" json:"timed_out,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *InproxyBroker) Reset() {
	*x = InproxyBroker{}
	mi := &file_proto_inproxy_broker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InproxyBroker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InproxyBroker) ProtoMessage() {}

func (x *InproxyBroker) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inproxy_broker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InproxyBroker.ProtoReflect.Descriptor instead.
func (*InproxyBroker) Descriptor() ([]byte, []int) {
	return file_proto_inproxy_broker_proto_rawDescGZIP(), []int{0}
}

func (x *InproxyBroker) GetMetadataClient() *MetadataClient {
	if x != nil {
		return x.MetadataClient
	}
	return nil
}

func (x *InproxyBroker) GetMetadataDevice() *MetadataDevice {
	if x != nil {
		return x.MetadataDevice
	}
	return nil
}

func (x *InproxyBroker) GetMetadataSession() *MetadataSession {
	if x != nil {
		return x.MetadataSession
	}
	return nil
}

func (x *InproxyBroker) GetMetadataServerEntry() *MetadataServerEntry {
	if x != nil {
		return x.MetadataServerEntry
	}
	return nil
}

func (x *InproxyBroker) GetMetadataMeek() *MetadataMeek {
	if x != nil {
		return x.MetadataMeek
	}
	return nil
}

func (x *InproxyBroker) GetAnnouncementMatchIndex() int32 {
	if x != nil && x.AnnouncementMatchIndex != nil {
		return *x.AnnouncementMatchIndex
	}
	return 0
}

func (x *InproxyBroker) GetAnnouncementQueueSize() int32 {
	if x != nil && x.AnnouncementQueueSize != nil {
		return *x.AnnouncementQueueSize
	}
	return 0
}

func (x *InproxyBroker) GetAnswerError() string {
	if x != nil && x.AnswerError != nil {
		return *x.AnswerError
	}
	return ""
}

func (x *InproxyBroker) GetAppliedTacticsTag() string {
	if x != nil && x.AppliedTacticsTag != nil {
		return *x.AppliedTacticsTag
	}
	return ""
}

func (x *InproxyBroker) GetBrokerEvent() string {
	if x != nil && x.BrokerEvent != nil {
		return *x.BrokerEvent
	}
	return ""
}

func (x *InproxyBroker) GetBrokerId() string {
	if x != nil && x.BrokerId != nil {
		return *x.BrokerId
	}
	return ""
}

func (x *InproxyBroker) GetConnectedClients() int64 {
	if x != nil && x.ConnectedClients != nil {
		return *x.ConnectedClients
	}
	return 0
}

func (x *InproxyBroker) GetConnectingClients() int64 {
	if x != nil && x.ConnectingClients != nil {
		return *x.ConnectingClients
	}
	return 0
}

func (x *InproxyBroker) GetConnectionId() string {
	if x != nil && x.ConnectionId != nil {
		return *x.ConnectionId
	}
	return ""
}

func (x *InproxyBroker) GetDestinationServerId() string {
	if x != nil && x.DestinationServerId != nil {
		return *x.DestinationServerId
	}
	return ""
}

func (x *InproxyBroker) GetElapsedTime() int64 {
	if x != nil && x.ElapsedTime != nil {
		return *x.ElapsedTime
	}
	return 0
}

func (x *InproxyBroker) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *InproxyBroker) GetFilteredIceCandidates() string {
	if x != nil && x.FilteredIceCandidates != nil {
		return *x.FilteredIceCandidates
	}
	return ""
}

func (x *InproxyBroker) GetFrontingProviderId() string {
	if x != nil && x.FrontingProviderId != nil {
		return *x.FrontingProviderId
	}
	return ""
}

func (x *InproxyBroker) GetHas_IPv6() bool {
	if x != nil && x.Has_IPv6 != nil {
		return *x.Has_IPv6
	}
	return false
}

func (x *InproxyBroker) GetHasCommonCompartmentIds() bool {
	if x != nil && x.HasCommonCompartmentIds != nil {
		return *x.HasCommonCompartmentIds
	}
	return false
}

func (x *InproxyBroker) GetHasPersonalCompartmentIds() bool {
	if x != nil && x.HasPersonalCompartmentIds != nil {
		return *x.HasPersonalCompartmentIds
	}
	return false
}

func (x *InproxyBroker) GetHasPrivate_IP() bool {
	if x != nil && x.HasPrivate_IP != nil {
		return *x.HasPrivate_IP
	}
	return false
}

func (x *InproxyBroker) GetIceCandidateTypes() string {
	if x != nil && x.IceCandidateTypes != nil {
		return *x.IceCandidateTypes
	}
	return ""
}

func (x *InproxyBroker) GetIsPriority() bool {
	if x != nil && x.IsPriority != nil {
		return *x.IsPriority
	}
	return false
}

func (x *InproxyBroker) GetLimitDownstreamBytesPerSecond() int64 {
	if x != nil && x.LimitDownstreamBytesPerSecond != nil {
		return *x.LimitDownstreamBytesPerSecond
	}
	return 0
}

func (x *InproxyBroker) GetLimitUpstreamBytesPerSecond() int64 {
	if x != nil && x.LimitUpstreamBytesPerSecond != nil {
		return *x.LimitUpstreamBytesPerSecond
	}
	return 0
}

func (x *InproxyBroker) GetMaxClients() int64 {
	if x != nil && x.MaxClients != nil {
		return *x.MaxClients
	}
	return 0
}

func (x *InproxyBroker) GetMeekServerHttpVersion() string {
	if x != nil && x.MeekServerHttpVersion != nil {
		return *x.MeekServerHttpVersion
	}
	return ""
}

func (x *InproxyBroker) GetNatType() string {
	if x != nil && x.NatType != nil {
		return *x.NatType
	}
	return ""
}

func (x *InproxyBroker) GetNetworkType() string {
	if x != nil && x.NetworkType != nil {
		return *x.NetworkType
	}
	return ""
}

func (x *InproxyBroker) GetNewTacticsTag() string {
	if x != nil && x.NewTacticsTag != nil {
		return *x.NewTacticsTag
	}
	return ""
}

func (x *InproxyBroker) GetOfferMatchIndex() int64 {
	if x != nil && x.OfferMatchIndex != nil {
		return *x.OfferMatchIndex
	}
	return 0
}

func (x *InproxyBroker) GetOfferQueueSize() int64 {
	if x != nil && x.OfferQueueSize != nil {
		return *x.OfferQueueSize
	}
	return 0
}

func (x *InproxyBroker) GetPeakDownstreamBytesPerSecond() int64 {
	if x != nil && x.PeakDownstreamBytesPerSecond != nil {
		return *x.PeakDownstreamBytesPerSecond
	}
	return 0
}

func (x *InproxyBroker) GetPeakUpstreamBytesPerSecond() int64 {
	if x != nil && x.PeakUpstreamBytesPerSecond != nil {
		return *x.PeakUpstreamBytesPerSecond
	}
	return 0
}

func (x *InproxyBroker) GetPortMappingTypes() string {
	if x != nil && x.PortMappingTypes != nil {
		return *x.PortMappingTypes
	}
	return ""
}

func (x *InproxyBroker) GetPreferredNatMatch() bool {
	if x != nil && x.PreferredNatMatch != nil {
		return *x.PreferredNatMatch
	}
	return false
}

func (x *InproxyBroker) GetProtocolVersion() int32 {
	if x != nil && x.ProtocolVersion != nil {
		return *x.ProtocolVersion
	}
	return 0
}

func (x *InproxyBroker) GetProxyId() string {
	if x != nil && x.ProxyId != nil {
		return *x.ProxyId
	}
	return ""
}

func (x *InproxyBroker) GetProxyNatType() string {
	if x != nil && x.ProxyNatType != nil {
		return *x.ProxyNatType
	}
	return ""
}

func (x *InproxyBroker) GetProxyPortMappingTypes() string {
	if x != nil && x.ProxyPortMappingTypes != nil {
		return *x.ProxyPortMappingTypes
	}
	return ""
}

func (x *InproxyBroker) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *InproxyBroker) GetStoredTacticsTag() string {
	if x != nil && x.StoredTacticsTag != nil {
		return *x.StoredTacticsTag
	}
	return ""
}

func (x *InproxyBroker) GetTimedOut() bool {
	if x != nil && x.TimedOut != nil {
		return *x.TimedOut
	}
	return false
}

var File_proto_inproxy_broker_proto protoreflect.FileDescriptor

const file_proto_inproxy_broker_proto_rawDesc = "" +
	"\n" +
	"\x1aproto/inproxy_broker.proto\x12\bpsiphond\x1a\x14proto/metadata.proto\"\xcd\x1a\n" +
	"\rInproxyBroker\x12F\n" +
	"\x0fmetadata_client\x18\x01 \x01(\v2\x18.psiphond.MetadataClientH\x00R\x0emetadataClient\x88\x01\x01\x12F\n" +
	"\x0fmetadata_device\x18\x02 \x01(\v2\x18.psiphond.MetadataDeviceH\x01R\x0emetadataDevice\x88\x01\x01\x12I\n" +
	"\x10metadata_session\x18\x03 \x01(\v2\x19.psiphond.MetadataSessionH\x02R\x0fmetadataSession\x88\x01\x01\x12V\n" +
	"\x15metadata_server_entry\x18\x04 \x01(\v2\x1d.psiphond.MetadataServerEntryH\x03R\x13metadataServerEntry\x88\x01\x01\x12@\n" +
	"\rmetadata_meek\x18\x05 \x01(\v2\x16.psiphond.MetadataMeekH\x04R\fmetadataMeek\x88\x01\x01\x12=\n" +
	"\x18announcement_match_index\x18d \x01(\x05H\x05R\x16announcementMatchIndex\x88\x01\x01\x12;\n" +
	"\x17announcement_queue_size\x18e \x01(\x05H\x06R\x15announcementQueueSize\x88\x01\x01\x12&\n" +
	"\fanswer_error\x18f \x01(\tH\aR\vanswerError\x88\x01\x01\x123\n" +
	"\x13applied_tactics_tag\x18g \x01(\tH\bR\x11appliedTacticsTag\x88\x01\x01\x12&\n" +
	"\fbroker_event\x18h \x01(\tH\tR\vbrokerEvent\x88\x01\x01\x12 \n" +
	"\tbroker_id\x18i \x01(\tH\n" +
	"R\bbrokerId\x88\x01\x01\x120\n" +
	"\x11connected_clients\x18j \x01(\x03H\vR\x10connectedClients\x88\x01\x01\x122\n" +
	"\x12connecting_clients\x18k \x01(\x03H\fR\x11connectingClients\x88\x01\x01\x12(\n" +
	"\rconnection_id\x18l \x01(\tH\rR\fconnectionId\x88\x01\x01\x127\n" +
	"\x15destination_server_id\x18m \x01(\tH\x0eR\x13destinationServerId\x88\x01\x01\x12&\n" +
	"\felapsed_time\x18n \x01(\x03H\x0fR\velapsedTime\x88\x01\x01\x12\x19\n" +
	"\x05error\x18o \x01(\tH\x10R\x05error\x88\x01\x01\x12;\n" +
	"\x17filtered_ice_candidates\x18p \x01(\tH\x11R\x15filteredIceCandidates\x88\x01\x01\x125\n" +
	"\x14fronting_provider_id\x18q \x01(\tH\x12R\x12frontingProviderId\x88\x01\x01\x12\x1e\n" +
	"\bhas_IPv6\x18r \x01(\bH\x13R\ahasIPv6\x88\x01\x01\x12@\n" +
	"\x1ahas_common_compartment_ids\x18s \x01(\bH\x14R\x17hasCommonCompartmentIds\x88\x01\x01\x12D\n" +
	"\x1chas_personal_compartment_ids\x18t \x01(\bH\x15R\x19hasPersonalCompartmentIds\x88\x01\x01\x12)\n" +
	"\x0ehas_private_IP\x18u \x01(\bH\x16R\fhasPrivateIP\x88\x01\x01\x123\n" +
	"\x13ice_candidate_types\x18v \x01(\tH\x17R\x11iceCandidateTypes\x88\x01\x01\x12$\n" +
	"\vis_priority\x18w \x01(\bH\x18R\n" +
	"isPriority\x88\x01\x01\x12M\n" +
	"!limit_downstream_bytes_per_second\x18x \x01(\x03H\x19R\x1dlimitDownstreamBytesPerSecond\x88\x01\x01\x12I\n" +
	"\x1flimit_upstream_bytes_per_second\x18y \x01(\x03H\x1aR\x1blimitUpstreamBytesPerSecond\x88\x01\x01\x12$\n" +
	"\vmax_clients\x18z \x01(\x03H\x1bR\n" +
	"maxClients\x88\x01\x01\x12<\n" +
	"\x18meek_server_http_version\x18{ \x01(\tH\x1cR\x15meekServerHttpVersion\x88\x01\x01\x12\x1e\n" +
	"\bnat_type\x18| \x01(\tH\x1dR\anatType\x88\x01\x01\x12&\n" +
	"\fnetwork_type\x18} \x01(\tH\x1eR\vnetworkType\x88\x01\x01\x12+\n" +
	"\x0fnew_tactics_tag\x18~ \x01(\tH\x1fR\rnewTacticsTag\x88\x01\x01\x12/\n" +
	"\x11offer_match_index\x18\x7f \x01(\x03H R\x0fofferMatchIndex\x88\x01\x01\x12.\n" +
	"\x10offer_queue_size\x18\x80\x01 \x01(\x03H!R\x0eofferQueueSize\x88\x01\x01\x12L\n" +
	" peak_downstream_bytes_per_second\x18\x81\x01 \x01(\x03H\"R\x1cpeakDownstreamBytesPerSecond\x88\x01\x01\x12H\n" +
	"\x1epeak_upstream_bytes_per_second\x18\x82\x01 \x01(\x03H#R\x1apeakUpstreamBytesPerSecond\x88\x01\x01\x122\n" +
	"\x12port_mapping_types\x18\x83\x01 \x01(\tH$R\x10portMappingTypes\x88\x01\x01\x124\n" +
	"\x13preferred_nat_match\x18\x84\x01 \x01(\bH%R\x11preferredNatMatch\x88\x01\x01\x12/\n" +
	"\x10protocol_version\x18\x85\x01 \x01(\x05H&R\x0fprotocolVersion\x88\x01\x01\x12\x1f\n" +
	"\bproxy_id\x18\x86\x01 \x01(\tH'R\aproxyId\x88\x01\x01\x12*\n" +
	"\x0eproxy_nat_type\x18\x87\x01 \x01(\tH(R\fproxyNatType\x88\x01\x01\x12=\n" +
	"\x18proxy_port_mapping_types\x18\x88\x01 \x01(\tH)R\x15proxyPortMappingTypes\x88\x01\x01\x12!\n" +
	"\tserver_id\x18\x89\x01 \x01(\tH*R\bserverId\x88\x01\x01\x122\n" +
	"\x12stored_tactics_tag\x18\x8a\x01 \x01(\tH+R\x10storedTacticsTag\x88\x01\x01\x12!\n" +
	"\ttimed_out\x18\x8b\x01 \x01(\bH,R\btimedOut\x88\x01\x01B\x12\n" +
	"\x10_metadata_clientB\x12\n" +
	"\x10_metadata_deviceB\x13\n" +
	"\x11_metadata_sessionB\x18\n" +
	"\x16_metadata_server_entryB\x10\n" +
	"\x0e_metadata_meekB\x1b\n" +
	"\x19_announcement_match_indexB\x1a\n" +
	"\x18_announcement_queue_sizeB\x0f\n" +
	"\r_answer_errorB\x16\n" +
	"\x14_applied_tactics_tagB\x0f\n" +
	"\r_broker_eventB\f\n" +
	"\n" +
	"_broker_idB\x14\n" +
	"\x12_connected_clientsB\x15\n" +
	"\x13_connecting_clientsB\x10\n" +
	"\x0e_connection_idB\x18\n" +
	"\x16_destination_server_idB\x0f\n" +
	"\r_elapsed_timeB\b\n" +
	"\x06_errorB\x1a\n" +
	"\x18_filtered_ice_candidatesB\x17\n" +
	"\x15_fronting_provider_idB\v\n" +
	"\t_has_IPv6B\x1d\n" +
	"\x1b_has_common_compartment_idsB\x1f\n" +
	"\x1d_has_personal_compartment_idsB\x11\n" +
	"\x0f_has_private_IPB\x16\n" +
	"\x14_ice_candidate_typesB\x0e\n" +
	"\f_is_priorityB$\n" +
	"\"_limit_downstream_bytes_per_secondB\"\n" +
	" _limit_upstream_bytes_per_secondB\x0e\n" +
	"\f_max_clientsB\x1b\n" +
	"\x19_meek_server_http_versionB\v\n" +
	"\t_nat_typeB\x0f\n" +
	"\r_network_typeB\x12\n" +
	"\x10_new_tactics_tagB\x14\n" +
	"\x12_offer_match_indexB\x13\n" +
	"\x11_offer_queue_sizeB#\n" +
	"!_peak_downstream_bytes_per_secondB!\n" +
	"\x1f_peak_upstream_bytes_per_secondB\x15\n" +
	"\x13_port_mapping_typesB\x16\n" +
	"\x14_preferred_nat_matchB\x13\n" +
	"\x11_protocol_versionB\v\n" +
	"\t_proxy_idB\x11\n" +
	"\x0f_proxy_nat_typeB\x1b\n" +
	"\x19_proxy_port_mapping_typesB\f\n" +
	"\n" +
	"_server_idB\x15\n" +
	"\x13_stored_tactics_tagB\f\n" +
	"\n" +
	"_timed_outB?Z=github.com/Psiphon-Labs/psiphon-tunnel-core/psiphon/server/pbb\x06proto3"

var (
	file_proto_inproxy_broker_proto_rawDescOnce sync.Once
	file_proto_inproxy_broker_proto_rawDescData []byte
)

func file_proto_inproxy_broker_proto_rawDescGZIP() []byte {
	file_proto_inproxy_broker_proto_rawDescOnce.Do(func() {
		file_proto_inproxy_broker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_inproxy_broker_proto_rawDesc), len(file_proto_inproxy_broker_proto_rawDesc)))
	})
	return file_proto_inproxy_broker_proto_rawDescData
}

var file_proto_inproxy_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_inproxy_broker_proto_goTypes = []any{
	(*InproxyBroker)(nil),       // 0: psiphond.InproxyBroker
	(*MetadataClient)(nil),      // 1: psiphond.MetadataClient
	(*MetadataDevice)(nil),      // 2: psiphond.MetadataDevice
	(*MetadataSession)(nil),     // 3: psiphond.MetadataSession
	(*MetadataServerEntry)(nil), // 4: psiphond.MetadataServerEntry
	(*MetadataMeek)(nil),        // 5: psiphond.MetadataMeek
}
var file_proto_inproxy_broker_proto_depIdxs = []int32{
	1, // 0: psiphond.InproxyBroker.metadata_client:type_name -> psiphond.MetadataClient
	2, // 1: psiphond.InproxyBroker.metadata_device:type_name -> psiphond.MetadataDevice
	3, // 2: psiphond.InproxyBroker.metadata_session:type_name -> psiphond.MetadataSession
	4, // 3: psiphond.InproxyBroker.metadata_server_entry:type_name -> psiphond.MetadataServerEntry
	5, // 4: psiphond.InproxyBroker.metadata_meek:type_name -> psiphond.MetadataMeek
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_inproxy_broker_proto_init() }
func file_proto_inproxy_broker_proto_init() {
	if File_proto_inproxy_broker_proto != nil {
		return
	}
	file_proto_metadata_proto_init()
	file_proto_inproxy_broker_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_inproxy_broker_proto_rawDesc), len(file_proto_inproxy_broker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_inproxy_broker_proto_goTypes,
		DependencyIndexes: file_proto_inproxy_broker_proto_depIdxs,
		MessageInfos:      file_proto_inproxy_broker_proto_msgTypes,
	}.Build()
	File_proto_inproxy_broker_proto = out.File
	file_proto_inproxy_broker_proto_goTypes = nil
	file_proto_inproxy_broker_proto_depIdxs = nil
}
